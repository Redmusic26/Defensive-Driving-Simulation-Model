AUTHOR: Jalen Linville
CS 4632 Modeling and Simulation Project
Last Updated: 11/24/2024 @ 11:19PM EST.
---------------------------------------------------------
VIDEO SHOWCASING SIMULATION MODEL:
https://www.youtube.com/watch?v=kI-tuMux-UI

---------------------------------------------------------
SUMMARY:

The repository you're currently viewing is a collection of scripts that are
for use in the BeamNG engine. None of them will work on their own but must be ran
within BeamNG. BeamNG is not my property and I requested a key to use the
BeamNG.tech fork. This repository doesn't contain any of the tools I'm using
because they're all part of BeamNG.tech; I don't want to distribute them at all.

These scripts will be used to conduct trials and gather information concerning how
effective different defensive driving techniques are. I plan on comparing the different
defensive driving techniques with one another but the overall goal of the project is
much more humble:

	Are defensive driving techniques effective at preventing damage
	and loss of life in automobile accidents and collisions?

---------------------------------------------------------
INSTALLATION/EXTRACTION:

If you'd like to try and use these scripts, you'll need to extract this
repository the BeamNG user version folder.
The address will approximate: C:\Users\[YOU]\AppData\Local\BeamNG.drive\[YOUR VERSION]
Everything in this repository is ran through BeamNG itself; IF YOU DON'T HAVE BEAMNG,
YOU WON'T BE ABLE TO RUN THESE SCRIPTS.

For help on running the Lua scripts, consult the "LUA SCRIPTS" section of this README.
For help on running the JSON settings scripts, consult the "DATA COLLECTION" section of this README.
For help on loading the trajectories (JSON files), consult the research document.

---------------------------------------------------------
LUA SCRIPTS:

The Lua scripts are a fit finicky to run.

I'll lay out the steps to run them as briefly as I can:
1. Open BeamNG.
2. Once on the main menu, press '~'. This should bring up BeamNG's developer console.
3. On the command line enter, "dofile(name)", replacing "name" with the name of the script you wish to run.

The 3 included Lua scripts can be used to prepare the simulation trials and load various settings.

---------------------------------------------------------
VARIABLES:

The variables that will be tested are:

	Following Distance, Vehicle Speed, and Reaction Time.

First, a "simulation state" is a JSON file that stores the vehicles and their assigned trajectories.
They can be loaded to restore a simulation trial in the engine at any time.
Second, a "trajectory" is also a JSON file that stores the information related to the path
the assigned vehicle will take when the simulation trial is ran. It consists of nodes and their
coordinates in the engine's rendered world.
For more details on these two things, please consult the new research document.

The repository is divided into THREE folders, each containing scripts used by BeamNG to
setup each simulation trial.
The folders:

	1. FollowingDistance contains simulation states and trajectories for the trials
	involving a variation in the following distance between vehicles.
	2. ReactionTime contains simulation states and trajectories for the trials
	involving a variation in the reaction time of simulated drivers.
	3. VehicleSpeed contains simulation states and trajectories for the trials
	involving a variation in the speed of involved vehicles.

Note that there is some overlap between these variables and the included trials.

The trajectory JSON files are rather easy to read but the simulation state JSON files are a mess, as they
are automatically generated by the BeamNG engine. I plan on organizing them eventually, as the code
needs some manual tweaking to fix small issues, but it still works, albeit not cleanly.
For example, the name of the vehicles spawned in by changing states doesn't save correctly
and the colors I chose for the vehicles doesn't save either.

---------------------------------------------------------
SCENARIOS and TRIALS:

There are three different scenarios that are being tested...

	FOLLOWING DISTANCE SCENARIO:
	1. This scenario involves two vehicles travelling at a set distance apart.
	The front vehicle slams on the brakes after missing a turn.
	What is the variance in outcome if the following distance of the rear car changes?

	VEHICLE SPEED SCENARIO:
	2. This scenario involves two vehicles. One is merging onto a highway and completely
	ignores a stop sign before doing so. The other vehicle is simply driving down
	the highway at a variable speed and isn't expecting the merging driver to pull out
	into the highway at all.
	What is the outcome of this scenario if the highway car's speed changes?

	REACTION TIME/DISTRACTION SCENARIO:
	3. This scenario involves two vehicles. One vehicle is stopped on the side of
	the road around a corner. The other vehicle is headed towards the stopped vehicle
	and is going to react to try and prevent a collision.
	What is the outcome if the driver is distracted for a certain period of time,
	delaying a reaction?

There are many more trials than there were in the first version of this README document...
Each of these trials were conducted at least three times...

	FOLLOWING DISTANCE TRIALS:
	1. Both cars travelling at 80KPH; distance of 2 meters between them.
	2. Both cars travelling at 80KPH; distance of 6 meters between them.
	3. Both cars travelling at 80KPH; distance of 12 meters between them.
	4. Both cars travelling at 80KPH; distance of 24 meters between them.
	5. Both cars travelling at 160KPH; distance of 2 meters between them.
	6. Both cars travelling at 160KPH; distance of 6 meters between them.
	7. Both cars travelling at 160KPH; distance of 12 meters between them.
	8. Both cars travelling at 160KPH; distance of 24 meters between them.

	VEHICLE SPEED TRIALS:	
	1. Merging vehicle travelling at 40KPH; highway vehicle travelling at 40KPH as well.
	2. Merging vehicle travelling at 40KPH; highway vehicle travelling at 60KPH.
	3. Merging vehicle travelling at 40KPH; highway vehicle travelling at 80KPH.
	4. Merging vehicle travelling at 40KPH; highway vehicle travelling at 100KPH.
	5. Merging vehicle travelling at 40KPH; highway vehicle travelling at 120KPH.
	6. Merging vehicle travelling at 40KPH; highway vehicle travelling at 140KPH.

	REACTION TIME/DISTRACTION TRIALS:
	1. Moving vehicle travelling at 80KPH; no delay in response.
	2. Moving vehicle travelling at 80KPH; 400MS delay in response.
	3. Moving vehicle travelling at 80KPH; 800MS delay in response.
	4. Moving vehicle travelling at 80KPH; 1600MS delay in response.
	5. Moving vehicle travelling at 80KPH; 2400MS delay in response.
	6. Moving vehicle travelling at 80KPH; 3200MS delay in response.
	7. Moving vehicle travelling at 120KPH; no delay in response.
	8. Moving vehicle travelling at 120KPH; 400MS delay in response.
	9. Moving vehicle travelling at 120KPH; 800MS delay in response.
	10. Moving vehicle travelling at 120KPH; 1600MS delay in response.
	11. Moving vehicle travelling at 120KPH; 2400MS delay in response.
	12. Moving vehicle travelling at 120KPH; 3200MS delay in response.

---------------------------------------------------------
DATA COLLECTION:

The Vehicle Stats Logger is used to write to the TrialLogs folder. It can be run through BeamNG
by adding an app on the UI Apps menu option.
In the future there will be a Lua script that can be ran to do this task as well.
When the UI App is loaded in BeamNG, type the name of the settings file you wish to use
in the "Load Settings from File" line and click load and then apply the settings.
The included Lua scripts conerning "runSettings" are used for this logger app.

The Vehicle Stats Logger keeps track of MANY different variables regarding the vehicles
involved in the simulation trial. If you open the TrialLogs folder in this repository
and navigate to any of the folders, you'll see a collection of CSV files regarding the
engine, inputs, wheels, and more.
Some of these variables will be used in the analysis of my data in order to arrive
at an answer to the question of whether defensive driving techniques are effective.
Some variables may not be used.

The Vehicle Stats Logger is not the only way data was collected however.
BeamNG features another UI App called the Beam Node Display that shows the user
the percentage of Beams (node connections used to render the vehicles) that are
deformed or damaged following a collision. If you look at the Excel spreadsheet submitted
along with this repository, it contains that data from every trial ran.
I recorded these manually by entering the data into the spreadsheet following each
trial. This data will be used in conjunction with the information from the Vehicle
States Logger.

---------------------------------------------------------
CHANGES TO RESEARCH DOCUMENT:
	
This summary below serves mainly just to highlight which sections have changed.
If you'd like the full details, please read the new document and go to the section.
It'll be attached with this repository.

-Changed the subsections in the Defensive Driving Techniques section; corresponds with
variables outlined above.
-Added information concerning using Lua scripts with BeamNG.
-Added a LOT of information about data collection and how it will be undergone. Added
a whole new section to the research document and many subsections.

---------------------------------------------------------
